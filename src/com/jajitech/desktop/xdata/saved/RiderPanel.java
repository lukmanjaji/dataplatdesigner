/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jajitech.desktop.xdata.saved;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;

/**
 *
 * @author Usman
 */
public class RiderPanel extends javax.swing.JPanel {

    /**
     * Creates new form RiderPanel
     */
    JFrame parent;
    JDialog dialog;
    Vector list = new Vector();
    PropertiesPanel props;
    public RiderPanel(JFrame parent, JDialog dialog, PropertiesPanel props) {
        this.parent = parent;
        this.dialog = dialog; 
        this.props = props;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rprop = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        vpanel = new javax.swing.JPanel();
        rcancel = new javax.swing.JButton();
        rsave = new javax.swing.JButton();
        remove = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        rprop.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));

        jLabel6.setText("Visibility");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "Custom" }));

        jLabel7.setText("Custom Setings");

        jLabel8.setText("Constraints");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Value from parent" }));
        jComboBox2.setPreferredSize(new java.awt.Dimension(70, 22));

        vpanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        javax.swing.GroupLayout vpanelLayout = new javax.swing.GroupLayout(vpanel);
        vpanel.setLayout(vpanelLayout);
        vpanelLayout.setHorizontalGroup(
            vpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        vpanelLayout.setVerticalGroup(
            vpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout rpropLayout = new javax.swing.GroupLayout(rprop);
        rprop.setLayout(rpropLayout);
        rpropLayout.setHorizontalGroup(
            rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpropLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rpropLayout.createSequentialGroup()
                        .addGroup(rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rpropLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rpropLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(85, 85, 85)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(rpropLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        rpropLayout.setVerticalGroup(
            rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpropLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rpropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        rcancel.setText("Cancel");
        rcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rcancelActionPerformed(evt);
            }
        });

        rsave.setText("Save");

        remove.setText("Remove Rider");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rsave)
                        .addGap(18, 18, 18)
                        .addComponent(rcancel))
                    .addComponent(rprop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rprop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remove)
                    .addComponent(rsave)
                    .addComponent(rcancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rcancelActionPerformed
        parent.setEnabled(true);
        dialog.dispose();
    }//GEN-LAST:event_rcancelActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
    props.removeRider();
    parent.setEnabled(true);
    dialog.dispose();
        

    }//GEN-LAST:event_removeActionPerformed

    JTextArea built;
    JPanel center;
    
    
    public void loadBuiltItems(String toLoad)
    {
        built.setText("");
        if(toLoad.equals("Africa"))
        {
            built.setText(readBuiltItems("africa.def"));
        }
        if(toLoad.equals("Asia"))
        {
            built.setText(readBuiltItems("asia.def"));
        }
        if(toLoad.equals("Europe"))
        {
            built.setText(readBuiltItems("europe.def"));
        }
        if(toLoad.equals("North America"))
        {
            built.setText(readBuiltItems("north_america.def"));
        }
        if(toLoad.equals("Oceania"))
        {
            built.setText(readBuiltItems("oceania.def"));
        }
        if(toLoad.equals("South America"))
        {
            built.setText(readBuiltItems("south_america.def"));
        }
        if(toLoad.equals("World"))
        {
            built.setText(readBuiltItems("world.def"));
        }
        if(toLoad.equals("Languages"))
        {
            built.setText(readBuiltItems("languages.def"));
        }
        if(toLoad.equals("Alphabets"))
        {
            built.setText(readBuiltItems("alphabets.def"));
        }
        if(toLoad.equals("Poor - Good"))
        {
            built.setText(readBuiltItems("poor_good.def"));
        }
        if(toLoad.equals("African Regions"))
        {
            built.setText(readBuiltItems("african_regions.def"));
        }
        if(toLoad.equals("Gender"))
        {
            built.setText(readBuiltItems("gender.def"));
        }
        if(toLoad.equals("Yes/No"))
        {
            built.setText(readBuiltItems("yes_no.def"));
        }
        if(toLoad.equals("Month"))
        {
            built.setText(readBuiltItems("months.def"));
        }
        if(toLoad.equals("Days of the week"))
        {
            built.setText(readBuiltItems("week.def"));
        }
        if(toLoad.equals("Religion"))
        {
            built.setText(readBuiltItems("religion.def"));
        }
        if(toLoad.equals("Relationship Status"))
        {
            built.setText(readBuiltItems("relationship.def"));
        }
        if(toLoad.equals("Education Level"))
        {
            built.setText(readBuiltItems("education.def"));
        }
    }
    
    public String readBuiltItems(String toRead)
    {
        String read = readFile("res/bin/"+toRead);
        return read;        
    }
    
    public String readFile(String path)
    {
        String output = "";
        try{
	FileInputStream fis = new FileInputStream(path);
	BufferedReader br = new BufferedReader(new InputStreamReader(fis));
	String line = null;
	while ((line = br.readLine()) != null) {
		output = output+line+"\n";
	}

	br.close();
        }catch(Exception er){}
        return output.trim();
    }
    
    public void getCustomItems()
    {
        File f = new File("res/bin/custom/");
        String h[] = f.list();
    }
    
    
    public void loadCustomItem(String toRead)
    {
        String read = readFile("res/bin/custom/"+toRead+".def");
        built.setText(read);        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton rcancel;
    private javax.swing.JButton remove;
    private javax.swing.JPanel rprop;
    private javax.swing.JButton rsave;
    private javax.swing.JPanel vpanel;
    // End of variables declaration//GEN-END:variables
}
